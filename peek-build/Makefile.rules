CFLAGS_BASE = -me
CFLAGS_BASE += -q 
CFLAGS_BASE += $(CCALIGNSTRUCTS)
CFLAGS_BASE += $(CCSUPPRESSWARN)
CFLAGS_BASE += -DTOOL_CHOICE=3
CFLAGS_BASE += -D_TMS470
CFLAGS_BASE += $(CCBASE)
CFLAGS_BASE += $(CCTHUMB)
CFLAGS_BASE += $(CCOPTIMIZE2)
CFLAGS_BASE += $(CCDEBUGOPTIMIZE)
CFLAGS_BASE += $(CCSTRICT)

ASFLAGS_BASE = -me $(CCTHUMB) --symdebug:coff

CFLAGS := $(addprefix -D,$(VARIANT_DEFINE)) \
					$(addprefix -U,$(VARIANT_UNDEFINE)) \
					$(addprefix -D,$(DEFINE)) \
					$(addprefix -U,$(UNDEFINE)) \
					$(addprefix -I,$(INCLUDE) $(COMPILER_INC))

ASFLAGS := $(ASFLAGS_BASE) $(CFLAGS_BASE) $(CFLAGS)

THISDIR = $(subst $(BASEDIR)/,,$(CURDIR))
OUTDIR  = $(BASEOUTDIR)/$(THISDIR)

STR2IND_TAB = $(BUILDDIR)/trace/str2ind.tab
STR2IND_LOG = $(BUILDDIR)/trace/str2ind.log
STR2IND_C   = $(BUILDDIR)/trace/str2ind.c

.SUFFIXES: .o .pp .c .cpp .pp_ .d

## TODO Dependency checking!
#-include $(DEPS)

## TODO Split into targets? note, -fp / -fc is required to differentiate c/c++

%.o: %.cpp
	@echo "  Compiling: $< => $@"
	@$(CC) -ppl $(CFLAGS) $<
	@#$(STR2IND) -a -t$(STR2IND_TAB) -l$(STR2IND_LOG) -v$(STR2IND_C) -f$(patsubst %.o,%.pp,$@)
	@$(CC) $(CFLAGS_BASE) -eoo -fr $(@D) -fp $(patsubst %.o,%.pp,$@)

%.o: %.c
	@echo "  Compiling: $< => $@"
	@$(CC) -ppl $(CFLAGS) $<
	@#$(STR2IND) -a -t$(STR2IND_TAB) -l$(STR2IND_LOG) -v$(STR2IND_C) -f$(patsubst %.o,%.pp,$@)
	@#$(CC) $(CFLAGS_BASE) --entry_hook=entry_stub --entry_parm=name --exit_hook=exit_stub --exit_parm=name -eoo -fr $(@D) -fc $(patsubst %.o,%.pp,$@)
	@$(CC) $(CFLAGS_BASE) -eoo -fr $(@D) -fc $(patsubst %.o,%.pp,$@)

%.o: %.s
	@echo "  Assembling: $< => $@"
	@$(CC) $(ASFLAGS) -eoo -fr $(@D) $<

%.o: %.asm
	@echo "  Assembling: $< => $@"
	@$(CC) $(ASFLAGS) -eoo -fr $(@D) $<

%.d: %.cpp
	@#echo "  Dependencies for $<"
	@$(CC) -ppi $(CFLAGS) $<
	@sed -e 's%\\%/%g' -e '1,1 s%^\s*%$(patsubst %.d,%.o,$@) $@ : $< %' -e 's%\s*$$% \\%g' -e '$$ s%\\%%' $(patsubst %.d,%.pp,$@) > $@

%.d: %.c
	@#echo "  Dependencies for $<"
	@$(CC) -ppi $(CFLAGS) $<
	@sed -e 's%\\%/%g' -e '1,1 s%^\s*%$(patsubst %.d,%.o,$@) $@ : $< %' -e 's%\s*$$% \\%g' -e '$$ s%\\%%' $(patsubst %.d,%.pp,$@) > $@
